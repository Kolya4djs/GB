#Задание №1

def simple_calc():
    x = float(input('Введите количество отработанных часов : '))
    y = float(input('Введите суммы оплаты труда за 1 час : '))
    c = float(input('Укажите размер премии - '))
    pay = x * y
    return pay + c
print(f'Размер заработной платы составил: {simple_calc() }')

#Задание №2


in_list = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
#мой вариант с enumerate
res_list = [number for i, number in enumerate(in_list) if i > 0 and in_list[i] > in_list[i - 1]]
#вариант без индексов вообще
res_list = [num1 for num1, num2 in zip(in_list[1:], in_list[:-1]) if num1 > num2]
print(res_list)


№Задание №3


print(f'Числа от 20 до 240 кратные 20 или 21 - {[el for el in range(20, 241) if el % 20 == 0 or el % 21 == 0]}')


 #Задание №4
 
 my_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
my_new_list = [el for el in my_list if my_list.count(el) < 2]
print(my_new_list)


№Задание №5

from functools import reduce


def my_func(el_p, el):
    return el_p * el

print(f'Список четных значений {[el for el in range(99, 1001) if el % 2 == 0]}')
print(f'Результат перемножения всех элементов списка {reduce(my_func, [el for el in range(99, 1001) if el % 2 == 0])}')



#Задание №6

from itertools import count

for el in count(int(input('Введите стартовое число '))):
    print(el) # внимание - беконечный цикл!

from itertools import cycle

my_list = [True, 'ABC', 123, None]
for el in cycle(my_list):
    print(el) # внимание - беконечный цикл!


#Задание №7


def fibo_gen(n):
    temp = 1
    for i in range(1, n + 1):
        temp *= i
        yield temp


n = int(input("Укажите факториал какого числа Вы хотели бы узнать?\n")) 
for _ in fibo_gen(n):
    print(_)
